// <auto-generated />
using System;
using GymData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymData.Migrations
{
    [DbContext(typeof(GymContextDB))]
    partial class GymContextDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymData.Models.Coach", b =>
                {
                    b.Property<int>("Cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cid"));

                    b.Property<string>("CAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CDOB")
                        .HasColumnType("datetime2");

                    b.Property<int>("CExperience")
                        .HasColumnType("int");

                    b.Property<string>("CName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cid");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("GymData.Models.Finance", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<decimal>("BAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("BDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("BillId");

                    b.HasIndex("AgentId");

                    b.HasIndex("MemberId");

                    b.ToTable("Finances");
                });

            modelBuilder.Entity("GymData.Models.Member", b =>
                {
                    b.Property<int>("Mid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mid"));

                    b.Property<int?>("MCoachId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MDOB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MGen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MMembershipId")
                        .HasColumnType("int");

                    b.Property<string>("MName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTiming")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Mid");

                    b.HasIndex("MCoachId");

                    b.HasIndex("MMembershipId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("GymData.Models.Membership", b =>
                {
                    b.Property<int>("MShipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MShipId"));

                    b.Property<decimal>("MCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MDuration")
                        .HasColumnType("int");

                    b.Property<string>("MGoal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MShipId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("GymData.Models.Receptionist", b =>
                {
                    b.Property<int>("Rsccptid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rsccptid"));

                    b.Property<string>("RecepAdd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecepDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecepGen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecepPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecepPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Rsccptid");

                    b.ToTable("Receptionists");
                });

            modelBuilder.Entity("GymData.Models.Finance", b =>
                {
                    b.HasOne("GymData.Models.Receptionist", "Agent")
                        .WithMany("Finances")
                        .HasForeignKey("AgentId");

                    b.HasOne("GymData.Models.Member", "Member")
                        .WithMany("Finances")
                        .HasForeignKey("MemberId");

                    b.Navigation("Agent");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GymData.Models.Member", b =>
                {
                    b.HasOne("GymData.Models.Coach", "MCoach")
                        .WithMany("Members")
                        .HasForeignKey("MCoachId");

                    b.HasOne("GymData.Models.Membership", "MMembership")
                        .WithMany("Members")
                        .HasForeignKey("MMembershipId");

                    b.Navigation("MCoach");

                    b.Navigation("MMembership");
                });

            modelBuilder.Entity("GymData.Models.Coach", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("GymData.Models.Member", b =>
                {
                    b.Navigation("Finances");
                });

            modelBuilder.Entity("GymData.Models.Membership", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("GymData.Models.Receptionist", b =>
                {
                    b.Navigation("Finances");
                });
#pragma warning restore 612, 618
        }
    }
}
