// <auto-generated />
using System;
using GymData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymData.Migrations
{
    [DbContext(typeof(GymContextDB))]
    partial class GymContextDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymData.Models.Client", b =>
                {
                    b.Property<int>("client_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("client_id"));

                    b.Property<string>("client_gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ispaid")
                        .HasColumnType("bit");

                    b.Property<int>("pack_id")
                        .HasColumnType("int");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("client_id");

                    b.HasIndex("pack_id");

                    b.ToTable("client");
                });

            modelBuilder.Entity("GymData.Models.Employee", b =>
                {
                    b.Property<int>("rep_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rep_id"));

                    b.Property<string>("rep_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("rep_birthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("rep_gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rep_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rep_pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rep_phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rep_id");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("GymData.Models.Instructor", b =>
                {
                    b.Property<int>("ins_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ins_id"));

                    b.Property<string>("ins_FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ins_LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ins_birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("ins_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ins_gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ins_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ins_pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ins_phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ins_salary")
                        .HasColumnType("int");

                    b.Property<string>("ins_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ins_id");

                    b.ToTable("instructors");
                });

            modelBuilder.Entity("GymData.Models.Package", b =>
                {
                    b.Property<int>("pack_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pack_id"));

                    b.Property<int?>("ins_id")
                        .HasColumnType("int");

                    b.Property<string>("pack_desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pack_img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("pack_price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("pack_sessionsCount")
                        .HasColumnType("int");

                    b.Property<string>("pack_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pack_id");

                    b.HasIndex("ins_id");

                    b.ToTable("package");
                });

            modelBuilder.Entity("GymData.Models.Payment", b =>
                {
                    b.Property<int>("payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payment_id"));

                    b.Property<decimal>("amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("client_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("payment_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payment_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("payment_id");

                    b.HasIndex("client_id");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("GymData.Models.Client", b =>
                {
                    b.HasOne("GymData.Models.Package", "Package")
                        .WithMany("Members")
                        .HasForeignKey("pack_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("GymData.Models.Package", b =>
                {
                    b.HasOne("GymData.Models.Instructor", "Instructor")
                        .WithMany("Packages")
                        .HasForeignKey("ins_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("GymData.Models.Payment", b =>
                {
                    b.HasOne("GymData.Models.Client", "Client")
                        .WithMany("Payments")
                        .HasForeignKey("client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GymData.Models.Client", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("GymData.Models.Instructor", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("GymData.Models.Package", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
